Java8 特性：核心：Lambda、Stream API

1. Lambda
2. 函数式接口
3. 方法引用和构造器引用
4. Stream API
5. 接口中的默认方法与静态方法
6. 新时间日期API
7. 其他新特性

优点：
速度快（比如，优化后的hashmap）
代码少 lambda（Lambda是一个匿名函数，将lambda表达式理解为一段可以传递的代码）
强大的StreamAPI（比如，优化的sql string）
便于并行，（串行切换并行容易，只需要调用一个方法）
最大化减少空指针异常 Optional

1.7 hashmap：数组-链表
    碰撞：当元素的hash值与已存储的元素hash值一样时，头插到该元素所在的链表中
    扩容：加载因子0.75，元素占hashmap容量75%时，对hashmap进行扩容，链表中的元素重新计算hash值
    结果：多次碰撞后，操作效率变低
    
1.8 hashmap：数组-链表-红黑树（二叉树的一种）
    碰撞：同一链表中元素大于8，且hashmap总容量大于64，将元素类型由链表转为红黑树
               除添加，其他效率都提高;
               二叉树的特性
               
1.7 方法区属于堆中的永久区的一部分，基本不被GC回收
1.8 永久区取消，方法区变成了元空间，使用物理内存        
